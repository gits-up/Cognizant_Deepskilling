package com.cognizant.spring_learn.spring_rest;

import com.cognizant.spring_learn.spring_rest.controller.CountryController;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@SpringBootTest
@AutoConfigureMockMvc
public class SpringRestApplicationTests {

    @Autowired
    private CountryController countryController;

    @Autowired
    private MockMvc mvc;

    // ✅ Test if controller is loaded
    @Test
    public void contextLoads() {
        assertNotNull(countryController);
    }

    // ✅ Test for /country
    @Test
    public void testGetCountryIndia() throws Exception {
        ResultActions actions = mvc.perform(get("/country"));
        actions.andExpect(status().isOk());
        actions.andExpect(jsonPath("$.code").exists());
        actions.andExpect(jsonPath("$.code").value("IN"));
        actions.andExpect(jsonPath("$.name").value("India"));
    }

    // ✅ Test for valid /countries/{code}
    @Test
    public void testGetCountryByCode() throws Exception {
        ResultActions actions = mvc.perform(get("/countries/US"));
        actions.andExpect(status().isOk());
        actions.andExpect(jsonPath("$.code").value("US"));
        actions.andExpect(jsonPath("$.name").value("United States"));
    }

    // ✅ Test for invalid country code
    @Test
    public void testGetCountryByCode_Exception() throws Exception {
        ResultActions actions = mvc.perform(get("/countries/xyz"));
        actions.andExpect(status().isNotFound());
        actions.andExpect(status().reason("Country not found"));
    }
}
